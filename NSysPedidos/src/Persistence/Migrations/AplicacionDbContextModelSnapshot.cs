// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Contextos;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(AplicacionDbContext))]
    partial class AplicacionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.PedidoDet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id Consecutivo del pedido");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Cantidad")
                        .HasPrecision(6, 3)
                        .HasColumnType("decimal(6,3)")
                        .HasComment("Cantidad solicitada");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasComment("El id del Cliente");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int")
                        .HasComment("El id del Empleado");

                    b.Property<bool>("EsCadaUno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Si el precio es por unidad y no por caja");

                    b.Property<string>("Estatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("Pendiente")
                        .HasComment("Estatus del articulo del Pedidio , P = Pendiente, F = Facturado");

                    b.Property<DateTime>("FechaDeCreacion")
                        .HasColumnType("datetime2")
                        .HasComment("Fecha de Creacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasComment("Fecha de Modificacion");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int")
                        .HasComment("Id del Catalogo de Marcas");

                    b.Property<string>("Notas")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasComment("Notas para el que va a surtir el reglon del Pedido");

                    b.Property<int>("ProdMaestroId")
                        .HasColumnType("int")
                        .HasComment("Id del catalogo de ProdMaestro");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasComment("Nombre del Usuario que Creo el registro");

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasComment("Nombre del Usuario que hizo la ultima modificacion de el registro");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ClienteId" }, "IX_PedidoDet_Cliente");

                    b.HasIndex(new[] { "MarcaId" }, "IX_PedidoDet_Marca");

                    b.HasIndex(new[] { "ProdMaestroId" }, "IX_PedidoDet_ProdMaestro");

                    b.ToTable("PedidoDet", (string)null);

                    b.HasComment("Listado de Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
